name: Deploy to Cerebral Cluster

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'development'
        type: choice
        options:
        - development
        - production
  push:
    branches: [ main ]
    paths:
      # WebMCP Server
      - 'cflow_platform/core/webmcp_server.py'
      - 'cflow_platform/core/master_tool_base.py'
      - 'cflow_platform/core/bmad_master_tools.py'
      - 'cflow_platform/core/bmad_advanced_master_tools.py'
      - 'cflow_platform/core/bmad_expansion_master_tools.py'
      - 'cflow_platform/core/tool_group_manager.py'
      - 'cflow_platform/core/client_tool_config.py'
      - 'cflow_platform/core/project_tool_filter.py'
      - 'cflow_platform/core/async_tool_executor.py'
      - 'cflow_platform/core/performance_cache.py'
      - 'cflow_platform/core/fault_tolerance.py'
      - 'cflow_platform/core/load_balancer.py'
      - 'cflow_platform/core/plugin_architecture.py'
      - 'cflow_platform/core/legacy_tool_migration.py'
      - 'cflow_platform/core/migration_validator.py'
      - 'cflow_platform/core/legacy_tool_removal.py'
      - 'cflow_platform/core/performance_optimizer.py'
      # Cerebral Backend (built from baerautotech/cerebral repository)
      # Infrastructure
      - 'infrastructure/docker/Dockerfile.webmcp'
      - 'infrastructure/docker/Dockerfile.cerebral-backend'
      - 'infrastructure/kubernetes/webmcp-*.yaml'
      - 'infrastructure/kubernetes/cerebral-backend-*.yaml'
      - 'scripts/deploy-webmcp*.sh'
      - 'scripts/deploy-all-services.sh'
      - 'infrastructure/framework/services.yaml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'development' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for SHA

      - name: Get SHA
        id: sha
        run: echo "sha=${GITHUB_SHA}" >> $GITHUB_OUTPUT

      - name: Set environment variables
        run: |
          echo "NAMESPACE=cerebral-${{ github.event.inputs.environment || 'development' }}" >> $GITHUB_ENV
          echo "IMAGE_NAME=webmcp" >> $GITHUB_ENV
          echo "REGISTRY=registry.baerautotech.com" >> $GITHUB_ENV
          echo "FULL_IMAGE=${REGISTRY}/${IMAGE_NAME}:${GITHUB_SHA}" >> $GITHUB_ENV
          echo "SSH_KEY_PATH=/tmp/cerebral_key" >> $GITHUB_ENV
          echo "CEREBRAL_HOST=10.34.0.10" >> $GITHUB_ENV

      - name: Setup SSH key
        run: |
          echo "${{ secrets.CEREBRAL_SSH_KEY }}" > $SSH_KEY_PATH
          chmod 600 $SSH_KEY_PATH
          ssh-add $SSH_KEY_PATH

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "Host cerebral" >> ~/.ssh/config
          echo "  HostName $CEREBRAL_HOST" >> ~/.ssh/config
          echo "  User cerebral" >> ~/.ssh/config
          echo "  IdentityFile $SSH_KEY_PATH" >> ~/.ssh/config
          echo "  StrictHostKeyChecking no" >> ~/.ssh/config
          echo "  UserKnownHostsFile /dev/null" >> ~/.ssh/config

      - name: Test SSH connection
        run: |
          ssh cerebral "echo 'SSH connection successful'"

      - name: Clone Cerebral repository
        run: |
          git clone https://github.com/baerautotech/cerebral.git ../cerebral
          cd ../cerebral
          git checkout main
          echo "Cerebral repository cloned successfully"

      - name: Build Docker images
        run: |
          # Build WebMCP image (from cflow-platform)
          docker build -f infrastructure/docker/Dockerfile.webmcp -t $REGISTRY/webmcp:$GITHUB_SHA .
          docker tag $REGISTRY/webmcp:$GITHUB_SHA $REGISTRY/webmcp:latest
          
          # Build Cerebral Backend image (from Cerebral repository)
          docker build -f infrastructure/docker/Dockerfile.cerebral-backend -t $REGISTRY/cerebral-backend:$GITHUB_SHA ../cerebral/
          docker tag $REGISTRY/cerebral-backend:$GITHUB_SHA $REGISTRY/cerebral-backend:latest

      - name: Push Docker images
        run: |
          echo "${{ secrets.DOCKER_REGISTRY_PASSWORD }}" | docker login $REGISTRY -u "${{ secrets.DOCKER_REGISTRY_USERNAME }}" --password-stdin
          # Push WebMCP images
          docker push $REGISTRY/webmcp:$GITHUB_SHA
          docker push $REGISTRY/webmcp:latest
          # Push Cerebral Backend images
          docker push $REGISTRY/cerebral-backend:$GITHUB_SHA
          docker push $REGISTRY/cerebral-backend:latest

      - name: Deploy to Cerebral cluster
        run: |
          # Copy deployment files to cerebral cluster
          scp -r infrastructure/kubernetes/ cerebral:/tmp/cerebral-deployment/
          scp scripts/deploy-all-services.sh cerebral:/tmp/cerebral-deployment/
          
          # Execute deployment on cerebral cluster
          ssh cerebral "cd /tmp/cerebral-deployment && \
            export NAMESPACE=$NAMESPACE && \
            export REGISTRY=$REGISTRY && \
            export VERSION=$GITHUB_SHA && \
            chmod +x deploy-all-services.sh && \
            ./deploy-all-services.sh -e ${{ github.event.inputs.environment || 'development' }} -s webmcp,cerebral-backend"

      - name: Verify deployment
        run: |
          # Apply deployments if they don't exist
          ssh cerebral "kubectl apply -f /tmp/cerebral-deployment/webmcp-${{ github.event.inputs.environment || 'development' }}.yaml"
          ssh cerebral "kubectl apply -f /tmp/cerebral-deployment/cerebral-backend-${{ github.event.inputs.environment || 'development' }}.yaml"
          
          # Update deployments with new images
          ssh cerebral "kubectl set image deployment/webmcp webmcp=$REGISTRY/webmcp:$GITHUB_SHA -n $NAMESPACE"
          ssh cerebral "kubectl set image deployment/cerebral-backend cerebral-backend=$REGISTRY/cerebral-backend:$GITHUB_SHA -n $NAMESPACE"
          
          # Wait for deployments to be ready
          ssh cerebral "kubectl rollout status deployment/webmcp -n $NAMESPACE --timeout=300s"
          ssh cerebral "kubectl rollout status deployment/cerebral-backend -n $NAMESPACE --timeout=300s"
          
          # Check pod status
          ssh cerebral "kubectl get pods -n $NAMESPACE -l app=webmcp"
          ssh cerebral "kubectl get pods -n $NAMESPACE -l app=cerebral-backend"
          
          # Check service status
          ssh cerebral "kubectl get svc -n $NAMESPACE -l app=webmcp"
          ssh cerebral "kubectl get svc -n $NAMESPACE -l app=cerebral-backend"

      - name: Health check
        run: |
          # Get WebMCP service endpoint
          WEBMCP_SERVICE_IP=$(ssh cerebral "kubectl get svc webmcp-service -n $NAMESPACE -o jsonpath='{.spec.clusterIP}'")
          WEBMCP_SERVICE_PORT=$(ssh cerebral "kubectl get svc webmcp-service -n $NAMESPACE -o jsonpath='{.spec.ports[0].port}'")
          
          # Get Cerebral Backend service endpoint
          BACKEND_SERVICE_IP=$(ssh cerebral "kubectl get svc cerebral-backend-service -n $NAMESPACE -o jsonpath='{.spec.clusterIP}'")
          BACKEND_SERVICE_PORT=$(ssh cerebral "kubectl get svc cerebral-backend-service -n $NAMESPACE -o jsonpath='{.spec.ports[0].port}'")
          
          # Test WebMCP health endpoint
          ssh cerebral "kubectl run test-webmcp --image=curlimages/curl --rm -i --restart=Never -- curl -f http://$WEBMCP_SERVICE_IP:$WEBMCP_SERVICE_PORT/health"
          
          # Test WebMCP help endpoint
          ssh cerebral "kubectl run test-webmcp-help --image=curlimages/curl --rm -i --restart=Never -- curl -f http://$WEBMCP_SERVICE_IP:$WEBMCP_SERVICE_PORT/help"
          
          # Test Cerebral Backend health endpoint
          ssh cerebral "kubectl run test-backend --image=curlimages/curl --rm -i --restart=Never -- curl -f http://$BACKEND_SERVICE_IP:$BACKEND_SERVICE_PORT/health"
          
          # Test Cerebral Backend API status
          ssh cerebral "kubectl run test-backend-api --image=curlimages/curl --rm -i --restart=Never -- curl -f http://$BACKEND_SERVICE_IP:$BACKEND_SERVICE_PORT/api/status"

      - name: Cleanup
        run: |
          ssh cerebral "rm -rf /tmp/cerebral-deployment"
          rm -f $SSH_KEY_PATH

      - name: Deployment summary
        run: |
          echo "üéâ Deployment completed successfully!"
          echo "üìä Deployment Summary:"
          echo "  SHA: $GITHUB_SHA"
          echo "  Namespace: $NAMESPACE"
          echo "  Environment: ${{ github.event.inputs.environment || 'development' }}"
          echo ""
          echo "üåê WebMCP Access URLs:"
          echo "  Health: http://webmcp-service.$NAMESPACE.svc.cluster.local:8000/health"
          echo "  Help: http://webmcp-service.$NAMESPACE.svc.cluster.local:8000/help"
          echo "  Master Tools: http://webmcp-service.$NAMESPACE.svc.cluster.local:8000/mcp/master-tools"
          echo "  API Docs: http://webmcp-service.$NAMESPACE.svc.cluster.local:8000/docs"
          echo ""
          echo "üåê Cerebral Backend Access URLs:"
          echo "  Health: http://cerebral-backend-service.$NAMESPACE.svc.cluster.local:8000/health"
          echo "  API Status: http://cerebral-backend-service.$NAMESPACE.svc.cluster.local:8000/api/status"
          echo "  API Config: http://cerebral-backend-service.$NAMESPACE.svc.cluster.local:8000/api/config"
          echo "  Services: http://cerebral-backend-service.$NAMESPACE.svc.cluster.local:8000/api/services"
