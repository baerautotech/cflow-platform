# Cerebral Cluster Deployment Configuration
# This file ensures MCP endpoints deploy via Git to the cerebral cluster

apiVersion: apps/v1
kind: Deployment
metadata:
  name: cerebral-mcp-api
  namespace: cerebral-platform
  labels:
    app: cerebral-mcp-api
    version: "1.0.0"
spec:
  replicas: 3
  selector:
    matchLabels:
      app: cerebral-mcp-api
  template:
    metadata:
      labels:
        app: cerebral-mcp-api
        version: "1.0.0"
    spec:
      containers:
      - name: mcp-api
        image: cerebral-platform/mcp-api:${SHA}
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: REDIS_HOST
          value: "redis.cerebral.baerautotech.com"
        - name: REDIS_PORT
          value: "6380"
        - name: REDIS_TOKEN
          valueFrom:
            secretKeyRef:
              name: cerebral-redis-secrets
              key: redis-token
        - name: SUPABASE_URL
          valueFrom:
            secretKeyRef:
              name: cerebral-supabase-secrets
              key: supabase-url
        - name: SUPABASE_ANON_KEY
          valueFrom:
            secretKeyRef:
              name: cerebral-supabase-secrets
              key: supabase-anon-key
        - name: SUPABASE_SERVICE_ROLE_KEY
          valueFrom:
            secretKeyRef:
              name: cerebral-supabase-secrets
              key: supabase-service-role-key
        - name: VAULT_URL
          value: "http://vault.cerebral.baerautotech.com:8200"
        - name: VAULT_TOKEN
          valueFrom:
            secretKeyRef:
              name: cerebral-vault-secrets
              key: vault-token
        - name: ADMIN_TOKEN
          valueFrom:
            secretKeyRef:
              name: cerebral-admin-secrets
              key: admin-token
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: cerebral-mcp-api-service
  namespace: cerebral-platform
  labels:
    app: cerebral-mcp-api
spec:
  selector:
    app: cerebral-mcp-api
  ports:
  - name: http
    port: 80
    targetPort: 8000
    protocol: TCP
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cerebral-mcp-api-ingress
  namespace: cerebral-platform
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - mcp.dev.baerautotech.com
    secretName: cerebral-mcp-api-tls
  rules:
  - host: mcp.dev.baerautotech.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: cerebral-mcp-api-service
            port:
              number: 80
---
apiVersion: v1
kind: Secret
metadata:
  name: cerebral-redis-secrets
  namespace: cerebral-platform
type: Opaque
data:
  redis-token: <base64-encoded-redis-token>
---
apiVersion: v1
kind: Secret
metadata:
  name: cerebral-supabase-secrets
  namespace: cerebral-platform
type: Opaque
data:
  supabase-url: <base64-encoded-supabase-url>
  supabase-anon-key: <base64-encoded-supabase-anon-key>
  supabase-service-role-key: <base64-encoded-supabase-service-role-key>
---
apiVersion: v1
kind: Secret
metadata:
  name: cerebral-vault-secrets
  namespace: cerebral-platform
type: Opaque
data:
  vault-token: <base64-encoded-vault-token>
---
apiVersion: v1
kind: Secret
metadata:
  name: cerebral-admin-secrets
  namespace: cerebral-platform
type: Opaque
data:
  admin-token: <base64-encoded-admin-token>
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cerebral-token-cleanup
  namespace: cerebral-platform
spec:
  schedule: "0 2 * * *"  # Daily at 2 AM
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: token-cleanup
            image: cerebral-platform/token-cleanup:latest
            env:
            - name: REDIS_HOST
              value: "redis.cerebral.baerautotech.com"
            - name: REDIS_PORT
              value: "6380"
            - name: REDIS_TOKEN
              valueFrom:
                secretKeyRef:
                  name: cerebral-redis-secrets
                  key: redis-token
            command:
            - python
            - /app/cleanup_expired_tokens.py
          restartPolicy: OnFailure
